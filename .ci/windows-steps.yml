steps:
- checkout: self
  clean: true
  fetchDepth: 5
  submodules: true

- task: CondaEnvironment@1
  displayName: Install dependencies
  inputs:
    createCustomEnvironment: True
    environmentName: shogun
    packageSpecs: 'python=3.6.* setuptools numpy scipy eigen rxcpp snappy zlib ctags ply jinja2 gtest mkl-devel'
    createOptions: '-c conda-forge'
    updateConda: false

- script: |
    .ci\\setup_clcache.cmd
  displayName: Setup CLCache

#- template: ./download-extract.yml
#  parameters:
#    name: 'CLcache'
#    artifactName: $(clcacheArtifactName)
#    destinationFolder: $(clcacheDir)
#    downloadPath: $(build.binariesDirectory)

- task: CMake@1
  displayName: Setup
  inputs:
    cmakeArgs: '-G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=$(buildConfiguration) -DCMAKE_INSTALL_PREFIX=$(CONDA_PREFIX)\Library -DBUILD_META_EXAMPLES=OFF -DENABLE_TESTING=ON ..'

- task: VSBuild@1
  displayName: 'VSBuild ($(buildConfiguration) $(buildPlatform))'
  inputs:
    solution: 'build/shogun.sln'
    vsVersion: 'latest'
    platform: $(buildPlatform)
    msbuildArchitecture: $(buildPlatform)
    msbuildArgs: '/p:TrackFileAccess=false /p:CLToolExe=clcache.exe'
    configuration: $(buildConfiguration)

- script: ctest -j%NUMBER_OF_PROCESSORS% -C $(buildConfiguration)
  displayName: Test
  workingDirectory: build

- script: clcache -s
  displayName: CLCache statistics

- template: ./archive-deploy.yml
  parameters:
    name: 'CLcache'
    dir: $(clcacheDir)
    archive: $(clcacheArchive)
    artifactName: $(clcacheArtifactName)
